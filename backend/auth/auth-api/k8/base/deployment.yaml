---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
      labels:
        app: auth-api
        team: auth
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - image: eu.gcr.io/insight/auth-api
          name: auth-api
          env:
            - name: GOOGLE_OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: google-oauth
                  key: client_id
            - name: GOOGLE_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: google-oauth
                  key: client_secret
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
            - name: POSTGRES_HOST
              value: postgres-postgresql
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: 500m
              memory: 500Mi
            limits:
              cpu: 1000m
              memory: 1000Mi
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 10
