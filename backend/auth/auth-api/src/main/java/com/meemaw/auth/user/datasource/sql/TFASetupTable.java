package com.meemaw.auth.user.datasource.sql;

import static org.jooq.impl.DSL.field;
import static org.jooq.impl.DSL.table;

import com.meemaw.shared.sql.table.AbstractSqlTable;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import org.jooq.Field;
import org.jooq.Table;

public class TFASetupTable extends AbstractSqlTable {

  public static final Table<?> TABLE = table("auth.user_tfa_setup");

  public static final Field<UUID> USER_ID = field("user_id", UUID.class);
  public static final Field<String> SECRET = field("secret", String.class);
  public static final Field<OffsetDateTime> CREATED_AT = field("created_at", OffsetDateTime.class);

  public static final List<Field<?>> INSERT_FIELDS = List.of(USER_ID, SECRET);
  public static final List<Field<?>> AUTO_GENERATED_FIELDS = List.of(CREATED_AT);

  public static final List<Field<?>> FIELDS =
      Stream.concat(INSERT_FIELDS.stream(), AUTO_GENERATED_FIELDS.stream())
          .collect(Collectors.toList());

  public static final Map<String, Field<?>> FIELD_MAPPINGS =
      FIELDS.stream().collect(Collectors.toMap(Field::getName, field -> field));

  private TFASetupTable() {}

  @Override
  public List<Field<?>> getInsertFields() {
    return INSERT_FIELDS;
  }

  @Override
  public List<Field<?>> getAutoGeneratedFields() {
    return AUTO_GENERATED_FIELDS;
  }

  @Override
  public List<Field<?>> getFields() {
    return FIELDS;
  }

  @Override
  public Map<String, Field<?>> getFieldMappings() {
    return FIELD_MAPPINGS;
  }
}
