## HTTP configuration
quarkus.http.port=80
%dev.quarkus.http.port=8083
quarkus.http.test-port=0
%test.quarkus.http.host=localhost

## OpenAPI configuration
quarkus.smallrye-openapi.path=/openapi

## CORS configuration
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:3000,https://app.dev.snuderls.eu

## Authorization configuration
authorization.s2s.api.key=${AUTHORIZATION_S2S_API_KEY:authorization-s2s-api-key}

## Datasource configuration
quarkus.datasource.username=${POSTGRES_USER:postgres}
quarkus.datasource.password=${POSTGRES_PASSWORD:postgres}
quarkus.datasource.url=vertx-reactive:postgresql://${POSTGRES_HOST:localhost}/${POSTGRES_DB:postgres}

## Logging configuration
quarkus.log.level=${LOG_LEVEL:INFO}
quarkus.log.console.json=${LOG_JSON:false}

## Jaeger
quarkus.jaeger.service-name=billing-api
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.jaeger.agent-host-port=${JAEGER_AGENT_HOST:localhost:6831}

## Git
git.commit.sha=${GIT_COMMIT_SHA:<GIT_COMMIT_SHA>}

## Billing
billing.stripe.webhook_secret=${STRIPE_WEBHOOK_SECRET:whsec_t0zlNMwQVl0gfl67W6qYXT5FJjOwQrzJ}
billing.stripe.api_key=${STRIPE_API_KEY:sk_test_51HRYgqI1ysvdCIIx21zf8xpaQ2p1M6DCaoEd4UD1c2Yr2p0sCw7PHVkV13WWFwjYqg8blbLk0llVbmpkeADxmELt00OIkvh5bT}
billing.stripe.business_plan.price_id=${STRIPE_BUSINESS_PLAN_PRICE_ID:price_1HRjvtI1ysvdCIIxwuxy4FEI}
billing.stripe.enterprise_plan.price_id=${STRIPE_ENTERPRISE_PLAN_PRICE_ID:price_1HRjvtI1ysvdCIIxwuxy4FEI}

## Service discovery
auth-api/mp-rest/url=${AUTH_API_BASE_URL:http://auth-api}
