## HTTP configuration
quarkus.http.port=80
%dev.quarkus.http.port=8082
quarkus.http.test-port=0
%test.quarkus.http.host=localhost

## OpenAPI configuration
quarkus.smallrye-openapi.path=/openapi

## Cors configuration
quarkus.http.cors=true
quarkus.http.cors.access-control-allow-credentials=true

## Datasource configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${POSTGRES_USER:postgres}
quarkus.datasource.password=${POSTGRES_PASSWORD:postgres}
quarkus.datasource.reactive.url=vertx-reactive:postgresql://${POSTGRES_HOST:localhost}/${POSTGRES_DB:postgres}

## Logging configuration
quarkus.log.level=${LOG_LEVEL:INFO}
quarkus.log.console.json=${LOG_JSON:false}

## Kafka configuration
kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
mp.messaging.incoming.events.connector=smallrye-kafka
mp.messaging.incoming.events.value.deserializer=com.meemaw.events.model.incoming.serialization.UserEventDeserializer

## Service discovery
%dev.auth-api/mp-rest/url=http://localhost:8080
auth-api/mp-rest/url=http://auth-api

## Authorization configuration
authorization.s2s.api.key=${AUTHORIZATION_S2S_API_KEY:authorization-s2s-api-key}

## Location services
location-lookup-resource/mp-rest/url=${LOCATION_LOOKUP_SERVICE_BASE_URL:http://api.ipstack.com}
what-is-my-ip-resource/mp-rest/url=${WHAT_IS_MY_IP_SERVICE_BASE_URL:https://bot.whatismyipaddress.com/}

## Jaeger
quarkus.jaeger.service-name=session-api
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.jaeger.agent-host-port=${JAEGER_AGENT_HOST:localhost:6831}

## Git
git.commit.sha=${GIT_COMMIT_SHA:<GIT_COMMIT_SHA>}

## Hazelcast
hazelcast.session.count-map=${HAZELCAST_SESSION_COUNT_MAP:hazelcast.session.count-map}
