### BASE ###
FROM node:14-alpine as base

WORKDIR /src

### BUILDER ###
FROM base AS builder

# Install production dependencies
COPY package.json yarn.lock tsconfig.json lerna.json ./
COPY frontend/shared/sdk/package.json ./frontend/shared/sdk/package.json
COPY frontend/shared/service-proxy/package.json ./frontend/shared/service-proxy/package.json
COPY frontend/shared/elements/package.json ./frontend/shared/elements/package.json
COPY frontend/app/package.json ./frontend/app/package.json

RUN yarn install --production --frozen-lockfile --prefer-offline
RUN cp -RL ./node_modules/ /tmp/node_modules/

# Copy source files
COPY frontend/app/ ./frontend/app/
COPY frontend/shared/ ./frontend/shared/

# Install all dependencies
RUN yarn install --frozen-lockfile --prefer-offline

# Build
RUN yarn frontend:app:build

### RUNNER ###
FROM base

WORKDIR /app

# Copy runtime dependencies
COPY --from=builder /tmp/node_modules/ ./node_modules/

COPY --from=builder /src/frontend/app/.next ./.next
COPY --from=builder /src/frontend/app/public ./public

COPY --from=builder /src/frontend/shared/sdk/package.json ./node_modules/@insight/sdk/package.json
COPY --from=builder /src/frontend/shared/sdk/dist ./node_modules/@insight/sdk/dist

COPY --from=builder /src/frontend/shared/elements/package.json ./node_modules/@insight/elements/package.json
COPY --from=builder /src/frontend/shared/elements/dist ./node_modules/@insight/elements/dist

USER node
ENV NODE_ENV production

EXPOSE 3000

CMD ["node", "node_modules/next/dist/bin/next", "start"]
