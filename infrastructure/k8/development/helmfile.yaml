---
repositories:
  - name: stable
    url: https://charts.helm.sh/stable
  - name: bitnami
    url: https://charts.bitnami.com/bitnami
  - name: elastic
    url: https://helm.elastic.co
  - name: kubernetes-dashboard
    url: https://kubernetes.github.io/dashboard/
  - name: incubator
    url: https://charts.helm.sh/incubator
  - name: grafana
    url: https://grafana.github.io/helm-charts
  - name: runatlantis
    url: https://runatlantis.github.io/helm-charts
  - name: ingress-nginx
    url: https://kubernetes.github.io/ingress-nginx
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts

helmfiles:
 {{ if eq .Environment.Name "production" }}- path: "./releases/cert-manager.yaml"{{ end }}

releases:
  - name: ingress-nginx
    chart: ingress-nginx/ingress-nginx
    version: 3.10.1
    namespace: {{ .Values.infraNamespace }}
    values:
     - ingress-nginx.yaml
  - name: postgres
    chart: bitnami/postgresql
    version: 10.0.2
    namespace: {{ .Values.appNamespace }}
    values:
      - postgres.yaml
  - name: metabase
    chart: stable/metabase
    version: 0.13.0
    namespace: {{ .Values.infraNamespace }}
    values:
      - metabase.yaml
      - ingress:
          enabled: true
          tls:
            - hosts:
              - "metabase.{{ .Values.infraDomain }}"
              - "www.metabase.{{ .Values.infraDomain }}"
              secretName: metabase-tls
          hosts:
            - "metabase.{{ .Values.infraDomain }}"
            - "www.metabase.{{ .Values.infraDomain }}"
          annotations:
{{ toYaml .Values.ingressAnnotations | indent 12 }}

  - name: kafka
    chart: bitnami/kafka
    version: 12.1.0
    namespace: {{ .Values.appNamespace }}
    values:
      - kafka.yaml

  - name: es5
    chart: elastic/elasticsearch
    version: 7.9.2
    namespace: {{ .Values.appNamespace }}
    values:
      - es.yaml
      - esJavaOpts: "{{ .Values.esJavaOpts }}"
      - resources:
{{ toYaml .Values.esResources | indent 10 }}
      - volumeClaimTemplate:
          storageClassName: "{{ .Values.storageClassName }}"

  - name: fluentbit
    chart: stable/fluent-bit
    version: 2.10.1
    namespace: {{ .Values.infraNamespace }}
    values:
      - fluentbit.yaml
      - backend:
          es:
            host: "elasticsearch-master.{{ .Values.appNamespace }}"
      - input:
          tail:
            parser: {{ .Values.fluentbitParser }}

  - name: kibana
    chart: elastic/kibana
    version: 7.9.2
    namespace: {{ .Values.infraNamespace }}
    values:
      - elasticsearchHosts: "http://elasticsearch-master.{{ .Values.appNamespace }}:9200"
      - ingress:
          enabled: true
          tls:
            - hosts:
              - "kibana.{{ .Values.infraDomain }}"
              secretName: kibana-tls
          hosts:
            - "kibana.{{ .Values.infraDomain }}"
          annotations:
{{ toYaml .Values.ingressAnnotations | indent 12 }}

  - name: dashboard
    chart: kubernetes-dashboard/kubernetes-dashboard
    version: 2.8.3
    namespace: {{ .Values.infraNamespace }}
    values:
      - dashboard.yaml
      - ingress:
          tls:
            - hosts:
              - "dashboard.{{ .Values.infraDomain }}"
              - "www.dashboard.{{ .Values.infraDomain }}"
              secretName: dashboard-tls
          hosts:
            - "dashboard.{{ .Values.infraDomain }}"
            - "www.dashboard.{{ .Values.infraDomain }}"
          annotations:
{{ toYaml .Values.ingressAnnotations | indent 12 }}

  - name: prometheus
    chart: prometheus-community/prometheus
    version: 11.16.9
    namespace: prometheus
    values:
      - prometheus.yaml
      - server:
          ingress:
            enabled: true
            tls:
              - hosts:
                - "prometheus.{{ .Values.infraDomain }}"
                - "www.prometheus.{{ .Values.infraDomain }}"
                secretName: prometheus-tls
            hosts:
              - "prometheus.{{ .Values.infraDomain }}"
              - "www.prometheus.{{ .Values.infraDomain }}"
            annotations:
{{ toYaml .Values.ingressAnnotations | indent 14 }}

      - alertmanager:
          ingress:
            enabled: true
            tls:
              - hosts:
                - "alertmanager.{{ .Values.infraDomain }}"
                secretName: alertmanager-tls
            hosts:
              - "alertmanager.{{ .Values.infraDomain }}"
            annotations:
{{ toYaml .Values.ingressAnnotations | indent 14 }}

  - name: grafana
    chart: grafana/grafana
    version: 6.1.7
    namespace: {{ .Values.infraNamespace }}
    values:
      - grafana.yaml
      - persistence:
          storageClassName: {{ .Values.storageClassName }}
      - ingress:
          enabled: true
          tls:
            - hosts:
              - "grafana.{{ .Values.infraDomain }}"
              - "www.grafana.{{ .Values.infraDomain }}"
              secretName: grafana-tls
          hosts:
            - "grafana.{{ .Values.infraDomain }}"
            - "www.grafana.{{ .Values.infraDomain }}"
          annotations:
{{ toYaml .Values.ingressAnnotations | indent 12 }}

{{ if eq .Environment.Name "production" }}
  - name: oauth2-proxy
    chart: stable/oauth2-proxy
    version: 3.2.3
    namespace: {{ .Values.infraNamespace }}
    values:
      - oauth-proxy.yaml
      - config:
          existingSecret: {{ .Values.oauthExistingSecret }}
  - name: atlantis
    chart: runatlantis/atlantis
    version: 3.12.4
    namespace: {{ .Values.infraNamespace }}
    values:
      - atlantis.yaml
      - ingress:
          tls:
            - hosts:
              - "atlantis.{{ .Values.infraDomain }}"
              secretName: atlantis-tls
          host: "atlantis.{{ .Values.infraDomain }}"
          annotations:
{{ toYaml .Values.ingressAnnotations | indent 12 }}

      - extraManifests:
          - apiVersion: extensions/v1beta1
            kind: Ingress
            spec:
              rules:
              - host: "atlantis.{{ .Values.infraDomain }}"
                http:
                  paths:
                  - backend:
                      serviceName: atlantis
                      servicePort: 80
                    path: /events
              tls:
              - hosts:
                - "atlantis.{{ .Values.infraDomain }}"
                secretName: atlantis-tls
            metadata:
              name: atlantis-public
              annotations:
{{ toYaml .Values.ingressAnnotationsHttps | indent 16 }}

{{ end }}

environments:
  default:
    values:
      - ./default.yaml
    missingFileHandler: Error
  production:
    values:
      - ./production.yaml
    missingFileHandler: Error
