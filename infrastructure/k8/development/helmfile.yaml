---
repositories:
  # To use official "stable" charts a.k.a https://github.com/helm/charts/tree/master/stable
  - name: stable
    url: https://kubernetes-charts.storage.googleapis.com
  - name: bitnami
    url: https://charts.bitnami.com/bitnami
  - name: jaegertracing
    url: https://jaegertracing.github.io/helm-charts
  - name: elastic
    url: https://helm.elastic.co
  - name: kubernetes-dashboard
    url: https://kubernetes.github.io/dashboard/
  - name: incubator
    url: https://kubernetes-charts-incubator.storage.googleapis.com/


helmfiles:
 {{ if eq .Environment.Name "production" }}- path: "./releases/cert-manager.yaml"{{ end }}


releases:
  - name: postgres
    chart: bitnami/postgresql
    version: 9.1.1
    namespace: {{ .Values.appNamespace }}
    values:
      - postgres.yaml
  - name: metabase
    chart: stable/metabase
    version: 0.12.0
    namespace: {{ .Values.appNamespace }}
    values:
      - metabase.yaml
      - ingress:
          enabled: true
          tls:
            - hosts:
              - "metabase.{{ .Values.infraDomain }}"
              secretName: metabase-tls
          hosts:
            - "metabase.{{ .Values.infraDomain }}"
          annotations:
{{ toYaml .Values.ingressAnnotations | indent 12 }}

  - name: kafka
    chart: bitnami/kafka
    version: 11.5.1
    namespace: {{ .Values.appNamespace }}
    values:
      - kafka.yaml
  - name: es5
    chart: elastic/elasticsearch
    version: 7.7.1
    namespace: {{ .Values.appNamespace }}
    values:
      - es.yaml
      - esJavaOpts: "{{ .Values.esJavaOpts }}"
      - resources:
{{ toYaml .Values.esResources | indent 10 }}
      - volumeClaimTemplate:
          storageClassName: "{{ .Values.storageClassName }}"
  - name: fluentbit
    chart: stable/fluent-bit
    version: 0.6.0
    namespace: {{ .Values.infraNamespace }}
    values:
      - fluentbit.yaml
      - backend:
          es:
            host: "elasticsearch-master.{{ .Values.appNamespace }}"
      - input:
          tail:
            parser: {{ .Values.fluentbitParser }}
  - name: kibana
    chart: elastic/kibana
    version: 7.7.1
    namespace: {{ .Values.infraNamespace }}
    values:
      - kibana.yaml
      - elasticsearchHosts: "http://elasticsearch-master.{{ .Values.appNamespace }}:9200"
      - ingress:
          tls:
            - hosts:
              - "kibana.{{ .Values.infraDomain }}"
              secretName: kibana-tls
          hosts:
            - "kibana.{{ .Values.infraDomain }}"
          annotations:
{{ toYaml .Values.ingressAnnotations | indent 12 }}
  - name: dashboard
    chart: kubernetes-dashboard/kubernetes-dashboard
    version: 2.0.3
    namespace: {{ .Values.infraNamespace }}
    values:
      - dashboard.yaml
      - ingress:
          tls:
            - hosts:
              - "dashboard.{{ .Values.infraDomain }}"
              secretName: dashboard-tls
          hosts:
            - "dashboard.{{ .Values.infraDomain }}"
          annotations:
{{ toYaml .Values.ingressAnnotations | indent 12 }}

  - name: prometheus
    chart: stable/prometheus
    version: 11.10.0
    namespace: prometheus
    values:
      - prometheus.yaml
      - server:
          ingress:
            enabled: true
            tls:
              - hosts:
                - "prometheus.{{ .Values.infraDomain }}"
                secretName: prometheus-tls
            hosts:
              - "prometheus.{{ .Values.infraDomain }}"
            annotations:
{{ toYaml .Values.ingressAnnotations | indent 14 }}

      - alertmanager:
          ingress:
            enabled: true
            tls:
              - hosts:
                - "alertmanager.{{ .Values.infraDomain }}"
                secretName: alertmanager-tls
            hosts:
              - "alertmanager.{{ .Values.infraDomain }}"
            annotations:
{{ toYaml .Values.ingressAnnotations | indent 14 }}

  - name: grafana
    chart: stable/grafana
    version: 5.5.0
    namespace: {{ .Values.infraNamespace }}
    values:
      - grafana.yaml
      - persistence:
          storageClassName: {{ .Values.storageClassName }}
      - ingress:
          enabled: true
          tls:
            - hosts:
              - "grafana.{{ .Values.infraDomain }}"
              secretName: grafana-tls
          hosts:
            - "grafana.{{ .Values.infraDomain }}"
          annotations:
{{ toYaml .Values.ingressAnnotations | indent 12 }}

  - name: jaeger
    chart: jaegertracing/jaeger
    namespace: monitoring
    version: 0.33.0
    values:
      - jaeger.yaml
      - storage:
          elasticsearch:
            host: "elasticsearch-master.{{ .Values.appNamespace }}"
      - query:
          ingress:
            enabled: true
            tls:
              - hosts:
                - "tracing.{{ .Values.infraDomain }}"
                secretName: tracing-tls
            hosts:
              - "tracing.{{ .Values.infraDomain }}"
            annotations:
{{ toYaml .Values.ingressAnnotations | indent 14 }}

{{ if eq .Environment.Name "production" }}
  - name: oauth2-proxy
    chart: stable/oauth2-proxy
    version: 3.2.1
    namespace: {{ .Values.infraNamespace }}
    values:
      - oauth-proxy.yaml
      - config:
          existingSecret: {{ .Values.oauthExistingSecret }}
  - name: atlantis
    chart: stable/atlantis
    version: 3.12.2
    namespace: {{ .Values.infraNamespace }}
    values:
      - atlantis.yaml
      - ingress:
          tls:
            - hosts:
              - "atlantis.{{ .Values.infraDomain }}"
              secretName: atlantis-tls
          host: "atlantis.{{ .Values.infraDomain }}"
          annotations:
{{ toYaml .Values.ingressAnnotations | indent 12 }}

      - extraManifests:
          - apiVersion: extensions/v1beta1
            kind: Ingress
            spec:
              rules:
              - host: atlantis.dev.snuderls.eu
                http:
                  paths:
                  - backend:
                      serviceName: atlantis
                      servicePort: 80
                    path: /events
              tls:
              - hosts:
                - atlantis.dev.snuderls.eu
                secretName: atlantis-tls
            metadata:
              name: atlantis-public
              annotations:
{{ toYaml .Values.ingressAnnotationsHttps | indent 16 }}

{{ end }}

environments:
  default:
    values:
      - ./default.yaml
    missingFileHandler: Error
  production:
    values:
      - ./production.yaml
    missingFileHandler: Error
