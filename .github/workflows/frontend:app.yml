---
on:
  push:
    paths:
      - '.github/workflows/frontend:app.yml'
      - 'backend/**'
      - 'frontend/app/**'
      - 'frontend/shared/**'
      - 'jest.config.js'
      - 'lerna.json'
      - 'package.json'
      - 'tsconfig.json'
      - 'yarn.lock'

env:
  CI: true
  ARTIFACTS_PATH: frontend/app/artifacts/
  BOOTSTRAP_SCRIPT: http://localhost:5001/localhost.insight.js
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  MAILER_MOCK: true
  STRIPE_TEST_API_KEY: ${{ secrets.STRIPE_TEST_API_KEY }}

jobs:
  unit_tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: install and unit test
        run: |
          yarn install --frozen-lockfile
          yarn workspace @insight/app test --coverage --testTimeout=15000
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend

  e2e_tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: backend | docker-compose up
        run: |
          mkdir -p $ARTIFACTS_PATH
          export STRIPE_WEBHOOK_SECRET=$(docker run --rm stripe/stripe-cli:latest listen --print-secret --api-key="$STRIPE_TEST_API_KEY")
          docker-compose -f backend/local-test-services/docker-compose.yml up auth-api session-api beacon-api billing-api search-indexer 2>&1 | tee $ARTIFACTS_PATH/docker.log &
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: frontend/app | install
        run: yarn install --frozen-lockfile
      - name: Cache .next/cache app
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/frontend/app/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}
      - name: Cache .next/cache try
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/frontend/try/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}
      - name: frontend | build
        run: |
          yarn workspace @insight/types build
          yarn concurrently "yarn workspace @insight/browser-bootstrap build" "yarn workspace @insight/browser-tracking build"
          yarn workspace @insight/browser-bootstrap serve 2>&1 | tee $ARTIFACTS_PATH/browser-bootstrap-serve.log &
          node_modules/wait-on/bin/wait-on http-get://localhost:5001 --timeout 600000
          mv frontend/app/.env.development frontend/app/.env.production
          yarn frontend:app:build
          yarn workspace @insight/try next build
      - name: frontend/app | start
        run: |
          yarn workspace @insight/app start 2>&1 | tee $ARTIFACTS_PATH/app-serve.log &
          yarn workspace @insight/try start -p 3002 2>&1 | tee $ARTIFACTS_PATH/try-serve.log &
          yarn workspace @insight/browser-tracking serve 2>&1 | tee $ARTIFACTS_PATH/browser-tracking-serve.log &
          node_modules/wait-on/bin/wait-on http-get://localhost:3000 --timeout 600000
          node_modules/wait-on/bin/wait-on http-get://localhost:3002 --timeout 600000
          node_modules/wait-on/bin/wait-on http-get://localhost:5000 --timeout 600000
          node_modules/wait-on/bin/wait-on http-get://localhost:8080/health/ready --timeout 600000
          node_modules/wait-on/bin/wait-on http-get://localhost:8081/health/ready --timeout 600000
          node_modules/wait-on/bin/wait-on http-get://localhost:8082/health/ready --timeout 600000
          node_modules/wait-on/bin/wait-on http-get://localhost:8083/health/ready --timeout 600000
          docker-compose -f backend/local-test-services/docker-compose.yml exec -T db psql -U postgres -c "INSERT INTO auth.password (user_id, hash) VALUES ('7c071176-d186-40ac-aaf8-ac9779ab047b', '\$2a\$13\$Wr6F0kX3AJQej92nUm.rxuU8S/4.bvQZHeDIcU6X8YxPLT1nNwslS')"
      - run: docker run --network="host" --rm stripe/stripe-cli:latest listen --forward-to localhost:8083/v1/billing/subscriptions/event --skip-verify --api-key="$STRIPE_TEST_API_KEY" 2>&1 | tee $ARTIFACTS_PATH/webhook.log &
      - name: frontend/app | test:e2e
        run: |
          mkdir -p $ARTIFACTS_PATH/screenshots
          mkdir -p $ARTIFACTS_PATH/videos
          xvfb-run --server-args="-screen 0 1280x720x24" yarn workspace @insight/app test:e2e
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: artifacts
          path: frontend/app/artifacts
