---
on:
  push:
    paths:
      - '.github/workflows/frontend:browser:tracking.yml'
      - 'backend/**'
      - 'frontend/browser/tracking/**'
      - 'jest.config.ts'
      - 'lerna.json'
      - 'package.json'
      - 'tsconfig.json'
      - 'yarn.lock'

env:
  CI: true
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ARTIFACTS_PATH: frontend/browser/tracking/artifacts/

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: backend | docker-compose up
        run: |
          mkdir -p $ARTIFACTS_PATH
          docker-compose -f backend/local-test-services/docker-compose.yml up auth-api beacon-api session-api 2>&1 | tee $ARTIFACTS_PATH/docker.log &
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: microsoft/playwright-github-action@v1
      - name: Install xvfb
        run: |
          sudo apt-get install xvfb
      - name: Install dependencies  and run tests
        run: |
          yarn install --frozen-lockfile
          node_modules/wait-on/bin/wait-on http-get://localhost:8080/health http-get://localhost:8081/health http-get://localhost:8082/health --timeout 600000
          xvfb-run --auto-servernum yarn workspace @rebrowse/browser-tracking test --coverage --forceExit
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: artifacts
          path: frontend/browser/tracking/artifacts
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend
      - name: Prepare files for deployment
        run: find ./ -name "*.js.gz" -exec sh -c 'mv $0 `basename "$0" .js.gz`.js' '{}' \;
        working-directory: frontend/browser/tracking/dist
      - uses: actions/upload-artifact@v2
        with:
          name: s
          path: frontend/browser/tracking/dist

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: s
          path: deployment/s
      - uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --follow-symlinks --content-encoding gzip
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_STATIC_STAGING }}
          SOURCE_DIR: 'deployment'
      - uses: chetan/invalidate-cloudfront-action@master
        env:
          PATHS: '/s/*'
          DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_STATIC_STAGING_DISTRIBUTION_ID }}
      - uses: rtCamp/action-slack-notify@master
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_RELEASE_WEBHOOK }}
          SLACK_USERNAME: botsights
          SLACK_CHANNEL: release
          SLACK_TITLE: Tracking script release
          SLACK_MESSAGE: 'New version ${{ env.GITHUB_SHA_SHORT }} of tracking script released to https://${{ secrets.AWS_CLOUDFRONT_STATIC_STAGING_DOMAIN }}/s/rebrowse.js! :rocket:'
          SLACK_ICON: https://avatars0.githubusercontent.com/u/66676697?s=96&v=4
