---
on:
  pull_request:
    paths:
      - '.github/workflows/docker-experiments.yml'
      - 'backend/**'
      - 'frontend/app/**'
      - 'frontend/shared/**'
      - 'jest.config.js'
      - 'lerna.json'
      - 'package.json'
      - 'tsconfig.json'
      - 'yarn.lock'

env:
  CI: true
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  ARCHIVES: /home/runner/archives
  ARTIFACTS_PATH: frontend/app/artifacts/
  BOOTSTRAP_SCRIPT: http://browser-bootstrap/localhost.insight.js
  MAILER_MOCK: true

jobs:
  docker_build:
    name: Docker build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          [
            auth-api,
            auth-api-postgres-migrations,
            session-api,
            session-api-postgres-migrations,
            session-api-elasticsearch-migrations,
            beacon-api,
            billing-api,
            billing-api-postgres-migrations,
            search-indexer,
            app,
            try,
            browser-tracking,
            browser-bootstrap,
          ]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}
      - name: Build docker image
        run: docker-compose -f backend/local-test-services/docker-compose.yml build ${{ matrix.target }}
      - name: Create image artifact
        run: |
          mkdir -p $ARCHIVES
          docker save local-test-services_${{ matrix.target }} > $ARCHIVES/${{ matrix.target }}.tar
      - uses: actions/upload-artifact@v2
        with:
          name: image-archives
          path: ${{ env.ARCHIVES }}

  e2e_tests:
    name: Run E2E tests
    runs-on: ubuntu-latest
    needs: [docker_build, npm_dependencies]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}
      - uses: actions/download-artifact@v2
        with:
          name: node_modules
          path: node_modules
      - uses: actions/download-artifact@v2
        with:
          name: image-archives
          path: ${{ env.ARCHIVES }}
      - name: Load docker images
        working-directory: ${{ env.ARCHIVES }}
        run: |
          for file in *; do docker load < $file; done
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Setup & wait for containers
        run: |
          mkdir -p $ARTIFACTS_PATH
          export STRIPE_WEBHOOK_SECRET=$(docker run --rm stripe/stripe-cli:latest listen --print-secret --api-key="${{ secrets.STRIPE_TEST_API_KEY }}")
          docker-compose -f backend/local-test-services/docker-compose.yml up app try browser-bootstrap browser-tracking search-indexer beacon-api 2>&1 | tee $ARTIFACTS_PATH/docker.log &
          yarn install --frozen-lockfile
          yarn workspace @insight/types build
          node_modules/wait-on/bin/wait-on http-get://localhost:8080/health http-get://localhost:8081/health http-get://localhost:8082/health http-get://localhost:8083/health http-get://localhost:3000 http-get://localhost:3002 http-get://localhost:5000 http-get://localhost:5001 --timeout 600000
          docker run --network="host" --rm stripe/stripe-cli:latest listen --forward-to localhost:8083/v1/billing/subscriptions/event --skip-verify --api-key="${{ secrets.STRIPE_TEST_API_KEY }}" 2>&1 | tee $ARTIFACTS_PATH/webhook.log &
          docker-compose -f backend/local-test-services/docker-compose.yml exec -T db psql -U postgres -c "INSERT INTO auth.password (user_id, hash) VALUES ('7c071176-d186-40ac-aaf8-ac9779ab047b', '\$2a\$13\$Wr6F0kX3AJQej92nUm.rxuU8S/4.bvQZHeDIcU6X8YxPLT1nNwslS')"
      - name: Run E2E tests
        run: |
          mkdir -p $ARTIFACTS_PATH/screenshots
          mkdir -p $ARTIFACTS_PATH/videos
          xvfb-run --server-args="-screen 0 1280x720x24" yarn workspace @insight/app test:e2e
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: artifacts
          path: ${{ env.ARTIFACTS_PATH }}

  deploy_storybook:
    name: Deploy Storybook
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: rlespinasse/github-slug-action@v2.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install & build üèóÔ∏è
        run: |
          yarn install --frozen-lockfile
          yarn workspace @insight/app pretest
          yarn workspace @insight/app storybook:build
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_APP_STORYBOOK }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DEST_DIR: ${{ env.GITHUB_HEAD_REF_SLUG }}
          SOURCE_DIR: frontend/app/storybook-static
      - name: Comment PR üí¨
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: 'üöÄ Storybook preview of frontend/app available at https://${{ secrets.APP_STORYBOOK_DOMAIN_NAME }}/${{ env.GITHUB_HEAD_REF_SLUG }}/index.html! üöÄ'
          check_for_duplicate_msg: true
