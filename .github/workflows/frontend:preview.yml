---
on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
    paths:
      - '.github/workflows/frontend:preview.yml'
      - 'frontend/app/**'
      - 'frontend/shared/**'
      - 'jest.config.js'
      - 'lerna.json'
      - 'package.json'
      - 'tsconfig.json'
      - 'yarn.lock'

env:
  CI: true
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_DEV_HOSTED_ZONE_ID: ${{ secrets.AWS_DEV_HOSTED_ZONE_ID }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DEV_DOMAIN_NAME: ${{ secrets.DEV_DOMAIN_NAME }}
  PR_NAME: pr-${{ github.event.number }}
  PREVIEWS_BUCKET_NAME: ${{ secrets.AWS_S3_FRONTEND_PREVIEWS_BUCKET_NAME }}
  PREVIEWS_APP_CERTIFICATE_ARN: ${{ secrets.AWS_APP_PREVIEW_CERTIFICATE_ARN }}
  PREVIEWS_APP_DEPLOYMENT_DOMAIN: pr-${{ github.event.number }}.app.${{ secrets.DEV_DOMAIN_NAME }}
  PREVIEWS_TRY_CERTIFICATE_ARN: ${{ secrets.AWS_TRY_PREVIEW_CERTIFICATE_ARN }}
  PREVIEWS_TRY_DEPLOYMENT_DOMAIN: pr-${{ github.event.number }}.try.${{ secrets.DEV_DOMAIN_NAME }}

jobs:
  preview:
    name: Deploy preview
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install NPM dependencies & build dependencies
        run: |
          yarn install --frozen-lockfile
          yarn workspace @insight/app prebuild
          sed -i '180ires.removeHeader(\"connection\")\;' node_modules/http-proxy/lib/http-proxy/passes/web-incoming.js
      # https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-requirements-limits.html#lambda-blacklisted-headers
      # http-proxy lib is not configurable enough to allow nice removal of 'connection' header. We should extract what we need at some point.
      - name: Serverless Deploy
        working-directory: frontend/app
        run: |
          aws s3 sync s3://$PREVIEWS_BUCKET_NAME/$PR_NAME/.serverless .serverless --delete
          NAME='${{ env.PR_NAME }}-app' CERTIFICATE_ARN='${{ env.PREVIEWS_APP_CERTIFICATE_ARN }}' envsubst < ../shared/previews/serverless.yml > serverless.yml
          echo "PROXY=staging" >> .env.production
          sed -i 's,http://localhost:3002,https://${{ env.PREVIEWS_TRY_DEPLOYMENT_DOMAIN }},g' .env.production
          npx serverless
          DISTRIBUTION_URL=$(cat .serverless/Template.app.CloudFront.json | jq -r '.url')
          DISTRIBUTION_DOMAIN=$(echo "$DISTRIBUTION_URL" | awk -F/ '{print $3}')
          echo "DISTRIBUTION_DOMAIN=$DISTRIBUTION_DOMAIN" >> $GITHUB_ENV
          echo "DISTRIBUTION_URL=$DISTRIBUTION_URL" >> $GITHUB_ENV
          aws s3 sync .serverless s3://$PREVIEWS_BUCKET_NAME/$PR_NAME/.serverless --delete
          aws s3 cp serverless.yml s3://$PREVIEWS_BUCKET_NAME/$PR_NAME/serverless.yml
      - name: Create DNS records
        run: |
          ACTION='UPSERT' NAME='${{ env.PREVIEWS_APP_DEPLOYMENT_DOMAIN }}' DNSName='${{ env.DISTRIBUTION_DOMAIN }}' envsubst < frontend/shared/previews/route53-change-set.json > route53-change-set.json
          aws route53 change-resource-record-sets --region $AWS_REGION --hosted-zone-id $AWS_DEV_HOSTED_ZONE_ID --change-batch 'file://route53-change-set.json'
      - name: Comment PR ðŸ’¬
        uses: unsplash/comment-on-pr@master
        with:
          msg: |
            App preview available at: https://${{ env.PREVIEWS_APP_DEPLOYMENT_DOMAIN }} ðŸš€
          check_for_duplicate_msg: true

  cleanup:
    name: Cleanup preview
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install NPM dependencies
        run: |
          yarn install --frozen-lockfile
          yarn workspace @insight/app prebuild
          sed -i '180ires.removeHeader(\"connection\")\;' node_modules/http-proxy/lib/http-proxy/passes/web-incoming.js
      - name: Serverless remove
        working-directory: frontend/app
        run: |
          aws s3 sync s3://$PREVIEWS_BUCKET_NAME/$PR_NAME/.serverless .serverless --delete
          aws s3 cp s3://$PREVIEWS_BUCKET_NAME/$PR_NAME/serverless.yml serverless.yml
          npx serverless
          DISTRIBUTION_URL=$(cat .serverless/Template.app.CloudFront.json | jq -r '.url')
          DISTRIBUTION_DOMAIN=$(echo "$DISTRIBUTION_URL" | awk -F/ '{print $3}')
          echo "DISTRIBUTION_DOMAIN=$DISTRIBUTION_DOMAIN" >> $GITHUB_ENV
          npx serverless remove
          aws s3 rm s3://$PREVIEWS_BUCKET_NAME/$PR_NAME --recursive
      - name: Remove DNS records
        run: |
          aws route53 change-resource-record-sets --region $AWS_REGION --hosted-zone-id $AWS_DEV_HOSTED_ZONE_ID --change-batch '{
            "Comment": "Delete alias resource record sets in Route 53",
            "Changes": [{
                      "Action": "DELETE",
                      "ResourceRecordSet": {
                                  "Name": "${{ env.PREVIEWS_APP_DEPLOYMENT_DOMAIN }}",
                                  "Type": "A",
                                  "AliasTarget":{
                                          "HostedZoneId": "Z2FDTNDATAQYW2",
                                          "DNSName": "${{ env.DISTRIBUTION_DOMAIN }}",
                                          "EvaluateTargetHealth": false
                                    }}
                                }]}'
