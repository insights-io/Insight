---
on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
    paths:
      - '.github/workflows/frontend:preview.yml'
      - 'frontend/app/**'
      - 'frontend/shared/**'
      - 'jest.config.js'
      - 'lerna.json'
      - 'package.json'
      - 'tsconfig.json'
      - 'yarn.lock'

env:
  CI: true
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_APP_PREVIEW_CERTIFICATE_ARN: ${{ secrets.AWS_APP_PREVIEW_CERTIFICATE_ARN }}
  AWS_S3_APP_PREVIEW_BUCKET_NAME: ${{ secrets.AWS_S3_APP_PREVIEW_BUCKET_NAME }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_DEV_HOSTED_ZONE_ID: ${{ secrets.AWS_DEV_HOSTED_ZONE_ID }}
  DEV_DOMAIN_NAME: ${{ secrets.DEV_DOMAIN_NAME }}
  PR_NAME: pr-${{ github.event.number }}
  PR_DEPLOYMENT_DOMAIN: pr-${{ github.event.number }}.app.${{ secrets.DEV_DOMAIN_NAME }}

jobs:
  preview:
    name: Deploy preview
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install NPM dependencies & build dependencies
        run: |
          yarn install --frozen-lockfile
          yarn workspace @insight/app prebuild
          sed -i '180ires.removeHeader(\"connection\")\;' node_modules/http-proxy/lib/http-proxy/passes/web-incoming.js
      # https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-requirements-limits.html#lambda-blacklisted-headers
      # http-proxy lib is not configurable enough to allow nice removal of 'connection' header. We should extract what we need at some point.
      - name: Serverless Deploy
        working-directory: frontend/app
        run: |
          aws s3 sync s3://$AWS_S3_APP_PREVIEW_BUCKET_NAME/$PR_NAME/.serverless .serverless --delete
          echo "app:
            component: '@sls-next/serverless-component@1.18.0-alpha.27'
            inputs:
              bucketRegion: '$AWS_REGION'
              memory:
                defaultLambda: 1024
                apiLambda: 1024
              cloudfront:
                aliases: ['$PR_DEPLOYMENT_DOMAIN']
                comment: '$PR_DEPLOYMENT_DOMAIN (Managed by @sls-next/serverless-component)'
                api/*:
                  forward:
                    headers: [Host,Referer]
                certificate:
                  cloudFrontDefaultCertificate: false
                  acmCertificateArn: '$AWS_APP_PREVIEW_CERTIFICATE_ARN'
          " > serverless.yml
          echo "PROXY=staging" >> .env.production
          npx serverless --debug
          DISTRIBUTION_URL=$(cat .serverless/Template.app.CloudFront.json | jq -r '.url')
          DISTRIBUTION_DOMAIN=$(echo "$DISTRIBUTION_URL" | awk -F/ '{print $3}')
          echo "DISTRIBUTION_DOMAIN=$DISTRIBUTION_DOMAIN" >> $GITHUB_ENV
          echo "DISTRIBUTION_URL=$DISTRIBUTION_URL" >> $GITHUB_ENV
          aws s3 sync .serverless s3://$AWS_S3_APP_PREVIEW_BUCKET_NAME/$PR_NAME/.serverless --delete
          aws s3 cp serverless.yml s3://$AWS_S3_APP_PREVIEW_BUCKET_NAME/$PR_NAME/serverless.yml
      - name: Create DNS records
        run: |
          aws route53 change-resource-record-sets --region $AWS_REGION --hosted-zone-id $AWS_DEV_HOSTED_ZONE_ID --change-batch '{
            "Comment": "Creating alias resource record sets in Route 53",
            "Changes": [{
                      "Action": "UPSERT",
                      "ResourceRecordSet": {
                                  "Name": "${{ env.PR_DEPLOYMENT_DOMAIN }}",
                                  "Type": "A",
                                  "AliasTarget":{
                                          "HostedZoneId": "Z2FDTNDATAQYW2",
                                          "DNSName": "${{ env.DISTRIBUTION_DOMAIN }}",
                                          "EvaluateTargetHealth": false
                                    }}
                                }]}'
      - name: Comment PR ðŸ’¬
        uses: unsplash/comment-on-pr@master
        with:
          msg: |
            App preview available at: https://${{ env.PR_DEPLOYMENT_DOMAIN }} ðŸš€
          check_for_duplicate_msg: true

  cleanup:
    name: Cleanup preview
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install NPM dependencies
        run: |
          yarn install --frozen-lockfile
          yarn workspace @insight/app prebuild
          sed -i '180ires.removeHeader(\"connection\")\;' node_modules/http-proxy/lib/http-proxy/passes/web-incoming.js
      - name: Serverless remove
        working-directory: frontend/app
        run: |
          aws s3 sync s3://$AWS_S3_APP_PREVIEW_BUCKET_NAME/$PR_NAME/.serverless .serverless --delete
          aws s3 cp s3://$AWS_S3_APP_PREVIEW_BUCKET_NAME/$PR_NAME/serverless.yml serverless.yml
          npx serverless --debug
          DISTRIBUTION_URL=$(cat .serverless/Template.app.CloudFront.json | jq -r '.url')
          DISTRIBUTION_DOMAIN=$(echo "$DISTRIBUTION_URL" | awk -F/ '{print $3}')
          echo "DISTRIBUTION_DOMAIN=$DISTRIBUTION_DOMAIN" >> $GITHUB_ENV
          npx serverless remove --debug
          aws s3 rm s3://$AWS_S3_APP_PREVIEW_BUCKET_NAME/$PR_NAME --recursive
      - name: Remove DNS records
        run: |
          aws route53 change-resource-record-sets --region $AWS_REGION --hosted-zone-id $AWS_DEV_HOSTED_ZONE_ID --change-batch '{
            "Comment": "Delete alias resource record sets in Route 53",
            "Changes": [{
                      "Action": "DELETE",
                      "ResourceRecordSet": {
                                  "Name": "${{ env.PR_DEPLOYMENT_DOMAIN }}",
                                  "Type": "A",
                                  "AliasTarget":{
                                          "HostedZoneId": "Z2FDTNDATAQYW2",
                                          "DNSName": "${{ env.DISTRIBUTION_DOMAIN }}",
                                          "EvaluateTargetHealth": false
                                    }}
                                }]}'
