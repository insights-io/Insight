---
on:
  push:
    paths:
      - '.github/workflows/frontend:browser:bootstrap.yml'
      - 'frontend/browser/bootstrap/**'
      - 'jest.config.js'
      - 'lerna.json'
      - 'package.json'
      - 'tsconfig.json'
      - 'yarn.lock'

env:
  CI: true
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  unit_tests_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install libgbm-dev xvfb
      - name: Install dependencies and run tests
        run: |
          yarn install --frozen-lockfile
          xvfb-run --auto-servernum yarn workspace @insight/browser-bootstrap test --coverage
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend
      - name: build
        run: |
          yarn workspace @insight/browser-bootstrap build
      - name: Prepare files for deployment
        run: find ./ -name "*.js.gz" -exec sh -c 'mv $0 `basename "$0" .js.gz`.js' '{}' \;
        working-directory: frontend/browser/bootstrap/dist
      - uses: actions/upload-artifact@v2
        with:
          name: b
          path: frontend/browser/bootstrap/dist

  deploy:
    runs-on: ubuntu-latest
    needs: [unit_tests_build]
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: b
          path: deployment/b
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --content-encoding gzip
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          SOURCE_DIR: 'deployment'
      - uses: chetan/invalidate-cloudfront-action@master
        env:
          PATHS: '/b/*'
          DISTRIBUTION: ${{ secrets.AWS_CF_DISTRIBUTION_ID }}
      - uses: rtCamp/action-slack-notify@master
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_RELEASE_WEBHOOK }}
          SLACK_USERNAME: botsights
          SLACK_CHANNEL: release
          SLACK_TITLE: Bootstrap script release
          SLACK_MESSAGE: 'New version ${{ env.GITHUB_SHA_SHORT }} of bootstrap script released! :rocket:'
          SLACK_ICON: https://avatars0.githubusercontent.com/u/66676697?s=96&v=4
